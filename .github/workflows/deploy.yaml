name: Deploy Components

on:
  workflow_dispatch:

jobs:
  read-scope-and-trigger:
    runs-on: ubuntu-latest
    outputs:
      all_success: ${{ steps.check_status.outputs.all_success }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Read scope.json
        id: parse_json
        run: |
          echo "Leyendo scope.json..."
          echo "COMPONENTS<<EOF" >> $GITHUB_ENV
          jq -c '.release.components.component[]' scope.json >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV


      - name: Trigger Deploy Workflows
        id: trigger_workflows
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Leyendo componentes y lanzando despliegues..."
          DEPLOYMENT_IDS=()
          
          while IFS= read -r component; do
            NAME=$(echo $component | jq -r '.name')
            VERSION=$(echo $component | jq -r '.version')
            REPO_URL=$(echo $component | jq -r '.repo')
            REPO_PATH=$(echo $REPO_URL | sed -E 's|https://api.github.com/repos/||')
      
            # Aqu√≠ puedes modificar la rama de despliegue seg√∫n sea necesario
            BRANCH_NAME="main"  # Cambiar por el nombre de la rama que utilices
      
            echo "üöÄ Lanzando despliegue para $NAME (Versi√≥n: $VERSION) en $REPO_PATH en la rama $BRANCH_NAME"

            DEPLOYMENT_ID=$(curl -s -X POST "https://api.github.com/repos/$REPO_PATH/actions/workflows/deploy.yml/dispatches" \
              -H "Accept: application/vnd.github.v3+json" \
              -H "Authorization: Bearer $GH_TOKEN" \
              -d "{\"ref\":\"$BRANCH_NAME\", \"inputs\": {\"version\": \"$VERSION\"}}")
      
            echo "Disparado despliegue para $NAME, estado: $DEPLOYMENT_ID"
            DEPLOYMENT_IDS+=("$REPO_PATH|$DEPLOYMENT_ID")
      

          done < <(echo "$COMPONENTS")
          echo "DEPLOYMENT_IDS=${DEPLOYMENT_IDS[@]}" >> $GITHUB_ENV

      - name: Wait for Deployments to Finish
        id: wait_for_deployments
        run: |
          echo "üïê Esperando que todos los despliegues finalicen..."
          all_success=true
      
          for entry in "${DEPLOYMENT_IDS[@]}"; do
            IFS="|" read -r REPO_PATH DEPLOYMENT_ID <<< "$entry"
      
            STATUS="in_progress"
            while [[ "$STATUS" == "in_progress" || "$STATUS" == "queued" ]]; do
              sleep 10
              STATUS=$(curl -s -H "Authorization: Bearer $GH_TOKEN" \
                "https://api.github.com/repos/$REPO_PATH/actions/runs/$DEPLOYMENT_ID" \
                | jq -r '.status')
              echo "üîÑ Estado de $REPO_PATH: $STATUS"
            done
      
            CONCLUSION=$(curl -s -H "Authorization: Bearer $GH_TOKEN" \
              "https://api.github.com/repos/$REPO_PATH/actions/runs/$DEPLOYMENT_ID" \
              | jq -r '.conclusion')
            echo "‚úîÔ∏è Resultado final de $REPO_PATH: $CONCLUSION"
            
            if [[ "$CONCLUSION" != "success" ]]; then
              all_success=false
            fi
          done
      
          echo "all_success=$all_success" >> $GITHUB_ENV


  finalize:
    needs: read-scope-and-trigger
    if: ${{ needs.read-scope-and-trigger.outputs.all_success == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Say Hello World
        run: echo "üéâ ¬°Hola Mundo! Todos los despliegues fueron exitosos."
